name: dotnet test

on:
  push:
    branches: [production, test, dev]

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true  

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        dotnet-version: ['6.0.x']
        
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore
      
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
      
    - name: Extract short SHA
      shell: bash
      run: echo "##[set-output name=short_sha;]$(echo ${GITHUB_SHA} | cut -c1-8)"
      id: extract_short_sha
      
    - name: Publish Web
      run:  dotnet publish -p:PublishProfile=FolderProfile --configuration Release Fakemail.Web

    - name: Publish Api
      run:  dotnet publish -p:PublishProfile=FolderProfile --configuration Release Fakemail.Api

    - name: Publish Services
      run:  dotnet publish -p:PublishProfile=FolderProfile --configuration Release Fakemail.Services

    - name: Upload Web build artifact
      uses: actions/upload-artifact@v3
      with:
        name: Fakemail.Web.dotnet-${{ matrix.dotnet-version }}.${{ steps.extract_branch.outputs.branch }}.${{ steps.extract_short_sha.outputs.short_sha }}
        path: Fakemail.Web/bin/Release/net6.0/publish

    - name: Upload Api build artifact
      uses: actions/upload-artifact@v3
      with:
        name: Fakemail.Api.dotnet-${{ matrix.dotnet-version }}.${{ steps.extract_branch.outputs.branch }}.${{ steps.extract_short_sha.outputs.short_sha }}
        path: Fakemail.Api/bin/Release/net6.0/publish

    - name: Upload Services build artifact
      uses: actions/upload-artifact@v3
      with:
        name: Fakemail.Services.dotnet-${{ matrix.dotnet-version }}.${{ steps.extract_branch.outputs.branch }}.${{ steps.extract_short_sha.outputs.short_sha }}
        path: Fakemail.Services/bin/Release/net6.0/publish

    - name: Test
      run: dotnet test --configuration Release --filter FullyQualifiedName!~Fakemail.IntegrationTests --no-restore --verbosity normal --logger trx --results-directory "TestResults-${{ matrix.dotnet-version }}"
 
    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.dotnet-version }}
        path: TestResults-${{ matrix.dotnet-version }}
      if: ${{ always() }}

    - uses: microsoft/variable-substitution@v1 
      with:
        files: '**/appsettings.json'
      env:
        Jwt.Secret: ${{ secrets.FAKEMAIL_API_JWT_SECRET }}

    - name: Set production deploy host
      shell: bash
      run: echo "##[set-output name=deploy_host;]$(echo fakemail.stream})"
      id: select_deploy_host
      if: ${{ steps.extract_branch.outputs.branch == 'dev'}}

    - uses: actions/checkout@v2
    - name: rsync deployment
      uses: burnett01/rsync-deployments@5.2
      with:
        switches: -avzr --delete
        path: Fakemail.Api/bin/Release/net6.0/publish/
        remote_path: ${{ secrets.FAKEMAIL_DEPLOY_PATH }}/api/
        remote_host: ${{ steps.select_deploy_host.deploy_host }}
        remote_user: ${{ secrets.FAKEMAIL_DEPLOY_USER }}
        remote_key: ${{ secrets.FAKEMAIL_DEPLOY_SSH_KEY }}
